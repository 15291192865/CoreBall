<!DOCTYPE html>
<html lang="zh">

	<head>
		<meta charset="UTF-8">
		<title>见缝插针</title>
		<style type="text/css">
			#canv {
				display: block;
				margin: auto;
				background: #000;
			}
		</style>
	</head>

	<body>
		<canvas id="canv" width="800" height="800">您的浏览器不支持canvas，请升级版本！</canvas>
	</body>
	<script type="text/javascript">
		var c = document.getElementById('canv');
		var ctx = c.getContext('2d');

		// 初始角度
		var deg = 0;
		// 带线小球数组
		var lightArr = [];
		// 等待小球数组
		var waitArr = [];
		// 等待小球的初始y轴
		var y = 300;
		// 添加带线小球的初始个数
		var timer = 0;
		// 计时器开关
		var as = true;
		// 开始开关
		var startFlag = 0;

		// 改变画布中心坐标
		ctx.translate(400, 300);
		// 游戏开始界面
		function gameStart() {
			// 清除画布
			ctx.clearRect(-400, -300, 800, 800);
			ctx.beginPath();
			ctx.font = '60px Arial';
			ctx.fillStyle = '#fff';
			ctx.fillText('见缝插针', -120, 100);
			ctx.beginPath();
			ctx.font = '30px Arial';
			ctx.fillStyle = '#fff';
			ctx.fillText('点击任何位置开始游戏', -150, 200);
		}
		gameStart();
		// 中心圆
		function contentCircle() {
			ctx.beginPath();
			ctx.fillStyle = '#fff';
			ctx.arc(0, 0, 80, 0, 2 * Math.PI);
			ctx.fill();

			ctx.beginPath();
			ctx.font = '100px Arial';
			ctx.fillStyle = '#000';
			ctx.fillText(1, -30, 40);
		}
		// contentCircle();
		// 带线小球
		function LightCircle() {
			//			this.x = 200 * Math.cos(deg);
			//			this.y = 200 * Math.sin(deg);
			this.deg = deg;
		}
		LightCircle.prototype.draw = function() {
			ctx.save();
			this.deg += 0.02;
			ctx.rotate(this.deg);
			ctx.beginPath();
			ctx.moveTo(0, 0);
			// ctx.lineTo(this.x,this.y);
			ctx.lineTo(0, 200);
			ctx.strokeStyle = '#fff';
			ctx.stroke();
			ctx.beginPath();
			ctx.fillStyle = '#fff';
			// ctx.arc(this.x,this.y,15,0,2 * Math.PI);
			ctx.arc(0, 200, 15, 0, 2 * Math.PI);
			ctx.fill();
			ctx.restore();
		}
		function createLightCircle() { // 实例化划线小球
			var lightCircle = new LightCircle();
			lightArr.push(lightCircle);
			// lightCircle.draw();
			deg += Math.PI / 2;
		}
		// 循环创建带线小球
		for(var i = 0; i < 4; i++) {
			createLightCircle();
		}
		// 等待小球
		function WaitCircle() {
			this.y = y;
		}
		WaitCircle.prototype.draw = function() {
			ctx.beginPath();
			ctx.fillStyle = '#fff';
			ctx.arc(0, this.y, 15, 0, 2 * Math.PI);
			ctx.fill();
		}
		function createWaitCircle() { // 实例化等待小球
			var waitCircle = new WaitCircle();
			waitArr.push(waitCircle);
			// waitCircle.draw();
			y += 40;
		}
		// 循环创建等待小球
		for(var j = 0; j < 8; j++) {
			createWaitCircle();
		}
		// 每点击一次，给中心圆添加一个带线小球，并且等待球删除一个
		function change() {
			timer++;
			if(timer > 0 && timer < 9) {
				for(var i = 0; i < 1; i++) {
					createLightCircle();
					deg -= Math.PI / 2;
					lightArr.push(); // 划线小球数组添加一个
					judge(); // 碰撞检测
					waitArr.splice(i, 1); // 等待圆数组删除一个
					for(var j = 0; j < waitArr.length; j++) {
						waitArr[j].draw();
						waitArr[j].y -= 40;
					}
				}
			}
		}
		// 碰撞检测
		function judge() {
			for(var i = 0; i < lightArr.length - 1; i++) {
				for(var j = lightArr.length - 1; j < lightArr.length; j++) {
					var nowDeg = lightArr[i].deg % (Math.PI * 2) - lightArr[j].deg % (Math.PI * 2);
					var l = Math.sin(nowDeg / 2) * 200 * 2;
					if(l < 30) {
						i = lightArr.length - 1;
						timer = 9;
						as = false;
						break;
					}
				}
			}
		}
		// 碰撞后游戏结束
		function gameOver() {
			// 清除画布
			ctx.clearRect(-400, -300, 800, 800);
			ctx.beginPath();
			ctx.font = '60px Arial';
			ctx.fillStyle = 'yellow';
			ctx.fillText('撞死了', -100, 100);
			// 初始数据
			deg = 0;
			lightArr = [];
			waitArr = [];
			y = 300;
			timer = 0;
			as = true;
			startFlag = 0;
			reFlag = true;
		}
		// 绘制频率
		function game() {
			// 清除画布
			ctx.clearRect(-400, -300, 800, 800);
			// 带线小球
			for(var i = 0; i < lightArr.length; i++) {
				lightArr[i].draw();
			}
			// 中心初始圆
			contentCircle();
			// 等待小球
			for(var j = 0; j < waitArr.length; j++) {
				waitArr[j].draw();
			}
			// 计时器
			if(as) {
				window.requestAnimationFrame(game);
			} else {
				gameOver();
				startFlag = 0;
				reFlag = false;
			}
		}
		var reFlag = true;
		c.onclick = function() {
			if(startFlag == 0) {
				ctx.clearRect(-400, -300, 800, 800);
				gameStart();
				game();
				if(reFlag == false) {
					for(var i = 0; i < 4; i++) {
						createLightCircle();
					}
					for(var j = 0; j < 8; j++) {
						createWaitCircle();
					}
					for(var j = 0; j < waitArr.length; j++) {
						waitArr[j].draw();
					}
				}
				startFlag = 1;
			} else {
				change(); // 改变后的两个数组
			} 
		}
	</script>

</html>
